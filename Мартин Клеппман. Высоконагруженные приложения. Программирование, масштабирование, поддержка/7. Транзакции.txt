Транзакция - способ группировки приложением нескольких операций записи и чтения в одну логическую единицу. 

ACID - atomicity, consistency, isolation, durability - атомарность, согласованность, изоляция и сохраняемость - 
	обеспечиваемые транзакциями гарантии функциональной безопасности.

BASE - basically available, soft state, eventual consistency - как правило, доступна, гибкое состояние и конечная согласованность. 
	Так называются системы, которые не соответствуют ACID.

Атомарность - операции идут, как одно целое, атомарно, и отменяются все вместе.

Согласованность - данные должны быть согласованы по определённым утверждения, напр, дебет должен сходиться с кредитом и тд, 
	если до транзакции бд была в согласованом состоянии, то и после должна в нем оказаться.

Изоляция - конкурентные транзакции изолированы друг от друга и не мешают друг другу

Сохраняемость - обязательство бд не терять успешно записанных транзакций данных

Многообьектные транзакции - когда транзакция охватывает несколько таблиц, объектов, документов и тд. Напр, 
	одновременное обновление нескольких таблиц

Однообъектные транзакции - когда дело касается одного взаимодействия с данными.

В случае ошибки во время транзакции можно повторить отправку данных, но это не идеальное решение, 
	тк если причина ошибки в перегруженности системы, это только усугубит ситуацию.

Базовый уровень изоляции зачастую - чтение зафиксированных данных (read commited). Он гарантирует
- клиент при чтении видит только зафиксированные данные
- при записи можно перезаписать только зафиксированные данные

Исп по дефолту в оракле, постгресе, sql server и тд. Чаще всего базы исп блокировку строк для предотвращения грязной записи. 
	Блокировка держится вплоть до фиксации или прерывания транзакции. 
	Для предотвращения грязного чтения бд просто в течение транзакции возвращает старое значение, 
	которое было до изменения в течение транзакции.