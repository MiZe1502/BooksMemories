Высоконагруженные данными приложения (data-intensive apps) часто требуют следующих частей:
- хранение данных (бд) 
- запоминание ресурсоемкой операции (кэш) 
- поисковые запросы 
- потоковая обработка (отправлять сообщения другим процессам для асинхронной обработки) 
- пакетная обработка (обработка больших данных) 

У разных бд и кэшей разные характеристики и они подходят для разных ситуаций 

Надёжность - система должна работать корректно даже при аппаратных или программных сбоях или ошибках юзеров
Масштабируемость - должны быть предусмотрены разумные решения, возникающи при росте системы проблем 
Удобство сопровождения - обеспечение возможной эффективной работы с системой многим людям. 

Сбой (fault) и отказ (failure) разные вещи - при сборе происходит отклонение одного из компонентов системы от рабочих характеристик, 
	а при отказе - вся система в целом прекращает предоставление сервиса пользователю. 

Можно пытаться искусственно генерить много сбоев, чтобы проверять разные ошибки 

Среднее время наработки на отказ хардов (mean time to failure, mttf) - от 10 до 50 лет, то в кластере с 10к хардами в среднем 
	ожидается отказ одного диска в день

Происходит сдвиг в сторону систем, способных перенести потерю целых машин, вместо избыточности аппаратного обеспечения. 

Аппаратные сбои носят случайных характер и не имеют корреляции. У программных ошибок зачастую есть систематичность.

Масштабируемость - не одномерная величина. Нужно подбирать варианты решения проблемы, если система вырастет определённым образом. 

Нужно рассматривать два аспекта:
- как изменится производительность системы, если увеличить параметр нагрузки при неизменным ресурсах системы
- насколько нужно увеличить ресурсы при увеличении нагрузки, чтобы производительность не изменилась? 

Время отклика нужно рассматривать не как число, а как распределение значений, характеристики которого можно определить, 
	тк при каждом запросе время отклика немного отличается. Частот смотрят среднее время отклика (именно арифметическое среднее), 
	но это не лучшая характеристика, она ничего не говорит о том, у какого количества юзеров такая задержка. 
	Обычно используют процентили и медианное значение 

Процентили часто используют в требованиях к уровню предоставления сервиса (service level objectives, slo) и соглашения об уровне 
	предоставления сервиса (service level agreements, sla) - контрактах, описывающий ожидаемые производительность и 
	доступность сервиса 

Часто важны верхние значения процентилей (хвостовые времена ожидания), тк непосредственно оказывают влияние 
	на опыт взаимодействия юзера с сервисом. 

За долгое время отклика часто ответственны задержки сообщений в очереди - даже небольшое кол-во медленных запросов приводит 
	к задержке последующих - блокировке головы очереди. 

Общий запрос юзера медленнен настолько, насколько медленнаяю его самая медленная прикладная часть. 

Вертикальное масштабирование - переход на более мощную машину, горизонтальное - распределение нагрузки по нескольким меньшим машинам. 

Раньше считалось что лучше масштабиолвать бд на одном узле, и только в крайнем случае делать её распределенной, 
	но со временем этот подход изменился. 

Архитектура зависит от приложения, не существует серебряной пули. Нужно учитывать, какие операции выполняются часто, какие - редко. 

Удобство сопровождения - по существу, подразумевает облегчение жизни командам разработки и операторов, 
	работающих с системой через мониторинг и управление, плюс упрощение модификации системы и её сложности. 